apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.response-404: '{"Type": "fixed-response", "FixedResponseConfig":
      {"ContentType":"text/plain", "StatusCode":"404", "MessageBody":"404 not found"}}'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-path: /timestamp
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/security-groups: "{{ .Values.alb.external.security-groups }}"
    alb.ingress.kubernetes.io/ssl-policy: {{ .Values.alb.ssl-policy }}
    alb.ingress.kubernetes.io/subnets: {{ .Values.alb.external.subnets }}
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=10
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.alb.external.certificate-arn }}
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  name: "eks-{{ .Values.host }}"
  namespace: {{ .Values.namespace }}
spec:
  rules:
    - http:
        paths:
         - path: /*
           backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
    - host: springbootsample-{{ .Values.host }}.{{ .Values.subDomain.main }}
      http:
        paths:
        - backend:
            serviceName: springbootsample-{{ .Values.env }}
            servicePort: 8080
